version: 2

.template:
  test: &cargo-test
    docker:
      - image: circleci/rust:1.32.0
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache-1.32.0
      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - run: |
          echo $WORK_DIR;
          cd $WORK_DIR;
          cargo clean;
          cargo test
          cargo test --examples
      - save_cache:
          key: cargo-cache
          paths:
            - "~/.cargo"


jobs:
  ch02/hello:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch02/hello

  ch02/ex02:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch02/ex02

  ch02/rpn:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch02/rpn

  ch03/bitonic-sorter:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch03/bitonic-sorter

  ch04/ex04:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch04/ex04

  ch05/ex05:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch05/ex05

  ch06/leap-year:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch06/leap-year

  ch07/ex07:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch07/ex07

  ch07/toy-vec:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch07/toy-vec

  ch08/ex08:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch08/ex08

  ch08/Overload:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - run: javac -version
      - run:
          name: test ch08/ex08/examples-java/Overload.java
          command: |
            javac Overload.java
            java Overload
          working_directory: ch08/ex08/examples-java/

  # TODO: Add an integration test for the bin target.
  ch09/parser:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch09/parser

  ch10/wordcount:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch10/wordcount

  # TODO: Add an integration test for the bin target.
  ch11/log-collector:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch11/log-collector

  # TODO: Add an integration test for the bin target.
  ch11/start-aw:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch11/start-aw

  # TODO: Add an integration test for the bin target.
  ch11/static-files:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch11/static-files

  # TODO: Add an integration test for the bin target.
  ch11/templates:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch11/templates

  # TODO: Add an integration test for the bin target.
  ch12/c-api:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/c-api

  # TODO: Add an integration test for the bin target.
  ch12/cffi-ownership:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/cffi-ownership

  # TODO: Add an integration test for the bin target.
  ch12/ffi-global:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/ffi-global

  ch12/onigmo:
    docker:
      - image: circleci/rust:1.32.0
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache

      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - run:
          name: install onigmo 6.1.3
          command: |
            sudo apt-get install -y curl make;
            curl -L -O https://github.com/k-takata/Onigmo/archive/Onigmo-6.1.3.tar.gz
            tar xf Onigmo-*.tar.gz
            cd Onigmo-O*
            ./configure
            make
            sudo make install
          working_directory: /tmp/onigmo-build
      - run:
          name: install libclang for bindgen, clang for stddef.h
          command: |
            sudo apt-get install libclang-dev clang
      - run:
          name: test onigmo-sys
          command: |
              cargo clean;
              cargo test --all-targets
          working_directory: ch12/onigmo-rs/onigmo-sys
      - run:
          name: test onigmo
          command: |
              cargo clean;
              cargo test --all-targets
          working_directory: ch12/onigmo-rs/onigmo
      - save_cache:
          key: cargo-cache
          paths:
            - "~/.cargo"


  # TODO: Add an integration test for the bin target.
  ch12/opaque:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/opaque

  # TODO: Add an integration test for the bin target.
  ch12/repr-c:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/repr-c

  # TODO: Add an integration test for the bin target.
  ch12/static-link:
    <<: *cargo-test
    environment:
      - WORK_DIR: ch12/static-link

  # TODO: Add an integration test for the bin target.
  ch12/cffi-readline:
    docker:
      - image: circleci/rust:1.32.0
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache

      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - run:
          name: test ch12/cffi_readline.rs
          command: |
              rustc --test cffi_readline.rs
              ./cffi_readline
          working_directory: ch12/
      - save_cache:
          key: cargo-cache
          paths:
            - "~/.cargo"

  # TODO: Add an integration test for the bin target.
  ch12/ptr_ownership:
    docker:
      - image: circleci/rust:1.32.0
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache
      - run:
          name: test ch12/ptr_ownership.rs
          command: |
              rustc --test ptr_ownership.rs
              ./ptr_ownership
          working_directory: ch12/
      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - save_cache:
          key: cargo-cache
          paths:
            - "~/.cargo"

  # TODO: Add an integration test for the bin target.
  ch12/smal_-cffi:
    docker:
      - image: circleci/rust:1.32.0
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache
      - run:
          name: test ch12/small_cffi
          command: |
              rustc --test small_cffi.rs
              ./small_cffi
          working_directory: ch12/
      - run: rustc --version --verbose
      - run: cargo --version --verbose
      - save_cache:
          key: cargo-cache
          paths:
            - "~/.cargo"

workflows:
  version: 2
  build_and_test:
    jobs:
      - ch02/hello
      - ch02/ex02
      - ch02/rpn
      - ch03/bitonic-sorter
      - ch04/ex04
      - ch05/ex05
      - ch06/leap-year
      - ch07/ex07
      - ch07/toy-vec
      - ch08/ex08
      - ch08/Overload
      - ch09/parser
      - ch10/wordcount
      - ch11/log-collector
      - ch11/start-aw
      - ch11/static-files
      - ch11/templates
      - ch12/c-api
      - ch12/cffi-ownership
      - ch12/ffi-global
      - ch12/onigmo
      - ch12/opaque
      - ch12/repr-c
      - ch12/static-link
      - ch12/cffi-readline
      - ch12/ptr_ownership
      - ch12/smal_-cffi
